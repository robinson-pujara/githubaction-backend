name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.11.1'

      - name: Bump version, Tag, and Push
        shell: powershell
        run: |
          # Set npm and git configurations (using PowerShell syntax)
          Set-ItemProperty -Path "HKCU:\Environment" -Name "npm_config_user_name" -Value "github-actions[bot]"
          Set-ItemProperty -Path "HKCU:\Environment" -Name "npm_config_user_email" -Value "robinsonpujara@gmail.com"

          # Bump the version (using npm's built-in capabilities)
          $newVersion = npm version patch --no-git-tag-version --message "chore(release): bump to %s [skip ci]"

          # Tagging
          if (-not (git tag -l "v$newVersion")) { 
            git tag "v$newVersion"
            git push origin "v$newVersion"
          } else {
            Write-Host "Tag v$newVersion already exists."
          }

          # Push using PAT for authentication
          $repoUrl = "https://x-access-token:${{ secrets.PAT }}@github.com/robinson-pujara/githubaction-backend"
          git remote set-url origin $repoUrl
          git push origin main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        shell: powershell
        run: |
          $DOCKER_IMAGE_LOWERCASE = ("robin/githubaction-test" | Out-String).ToLower()
          $VERSION = npm version --silent
          $GIT_COMMIT_HASH = git rev-parse --short HEAD
          $ENVIRONMENT = "dev"
          if ("${{ github.ref }}" -eq "refs/heads/main") {
            $ENVIRONMENT = "prod"
          }

          docker build -t $DOCKER_IMAGE_LOWERCASE:$ENVIRONMENT-$VERSION-$GIT_COMMIT_HASH .
          docker push $DOCKER_IMAGE_LOWERCASE:$ENVIRONMENT-$VERSION-$GIT_COMMIT_HASH

          if ($ENVIRONMENT -eq "prod") {
            docker tag $DOCKER_IMAGE_LOWERCASE:$ENVIRONMENT-$VERSION-$GIT_COMMIT_HASH $DOCKER_IMAGE_LOWERCASE:stable
            docker push $DOCKER_IMAGE_LOWERCASE:stable
          } elseif ($ENVIRONMENT -eq "dev") {
            docker tag $DOCKER_IMAGE_LOWERCASE:$ENVIRONMENT-$VERSION-$GIT_COMMIT_HASH $DOCKER_IMAGE_LOWERCASE:dev
            docker push $DOCKER_IMAGE_LOWERCASE:dev
          }
