name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.11.1'

      - name: Bump version, Tag, and Push
        run: |
          $npmPath = "C:\Program Files\nodejs\npm.cmd"
          git config user.name "github-actions[bot]"
          git config user.email "robinsonpujara@gmail.com"
          
          $newVersion = & $npmPath version patch --no-git-tag-version
          Write-Host "New version: $newVersion"
          
          git add package.json
          git commit -m "chore(release): bump version to $newVersion [skip ci]"
          
          if (-not (git tag -l | Select-String -Pattern "^$newVersion$")) {
            git tag $newVersion
            git push origin $newVersion
          } else {
            Write-Host "Tag $newVersion already exists."
          }
          
          $repoUrl = "https://x-access-token:${{ secrets.PAT }}@github.com/robinson-pujara/githubaction-backend.git"
          git remote set-url origin $repoUrl
          git push origin main
        shell: powershell
        env:
          PAT: ${{ secrets.PAT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          $DOCKER_IMAGE = "robin/githubaction-test"
          $GIT_COMMIT_HASH = git rev-parse --short HEAD
          $ENVIRONMENT = "dev"
          if ("${{ github.ref }}" -eq "refs/heads/main") {
            $ENVIRONMENT = "prod"
          }
          
          docker build -t "${DOCKER_IMAGE}:$ENVIRONMENT-$newVersion-$GIT_COMMIT_HASH" .
          docker push "${DOCKER_IMAGE}:$ENVIRONMENT-$newVersion-$GIT_COMMIT_HASH"
          
          if ($ENVIRONMENT -eq "prod") {
            docker tag "${DOCKER_IMAGE}:$ENVIRONMENT-$newVersion-$GIT_COMMIT_HASH" "${DOCKER_IMAGE}:stable"
            docker push "${DOCKER_IMAGE}:stable"
          } elseif ($ENVIRONMENT -eq "dev") {
            docker tag "${DOCKER_IMAGE}:$ENVIRONMENT-$newVersion-$GIT_COMMIT_HASH" "${DOCKER_IMAGE}:dev"
            docker push "${DOCKER_IMAGE}:dev"
          }
        shell: powershell
