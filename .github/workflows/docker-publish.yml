name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.11.1'
          
      - name: Manual Version Bump and Tag
        run: |
          $npmPath = "C:\Program Files\nodejs\npm.cmd"
          & $npmPath version patch -m "chore(release): bump version to %s [skip ci]"
          $newVersion = & $npmPath version --silent
          git config user.name "Automated Version Bump"
          git config user.email "gh-action-bump-version@users.noreply.github.com"
          git add package.json
          git commit -m "chore(release): bump version to $newVersion [skip ci]"
          git tag "v$newVersion"
          git push && git push --tags
        shell: powershell

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          DOCKER_IMAGE= robin/githubAction-test
          VERSION=$(npm version --silent)
          GIT_COMMIT_HASH=$(git rev-parse --short HEAD)
          ENVIRONMENT="dev"
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            ENVIRONMENT="prod"
          fi
          
          docker build -t $DOCKER_IMAGE:$ENVIRONMENT-$VERSION-$GIT_COMMIT_HASH .
          docker push $DOCKER_IMAGE:$ENVIRONMENT-$VERSION-$GIT_COMMIT_HASH
          
          if [ "$ENVIRONMENT" == "prod" ]; then
            docker tag $DOCKER_IMAGE:$ENVIRONMENT-$VERSION-$GIT_COMMIT_HASH $DOCKER_IMAGE:stable
            docker push $DOCKER_IMAGE:stable
          elif [ "$ENVIRONMENT" == "dev" ]; then
            docker tag $DOCKER_IMAGE:$ENVIRONMENT-$VERSION-$GIT_COMMIT_HASH $DOCKER_IMAGE:dev
            docker push $DOCKER_IMAGE:dev
